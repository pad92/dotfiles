set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'seebi/tmux-colors-solarized'

# Powerline
## arch : yay -S powerline
if '[ -f /usr/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf ]' 'source /usr/lib/python3.7/site-packages/powerline/bindings/tmux/powerline.conf'

set -g @colors-solarized 'dark'

# Start numbering at 1
set -g base-index 1

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# set window split
bind-key v split-window -h -c "#{pane_current_path}"
bind-key b split-window -c "#{pane_current_path}"

# scroll with mouse
set -g terminal-overrides 'xterm*:smcup@:rmcup@'


# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# auto window rename
set-window-option -g automatic-rename

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

run -b '~/.tmux/plugins/tpm/tpm'
