[include]
  path = ~/.gitconfig.local

[core]
  editor = vim
  excludesfile = ~/.gitignore
  whitespace = space-before-tab,trailing-space

[apply]
  # Detect whitespace errors when applying a patch
  whitespace = fix

[color]
  # Use colors in Git commands that are capable of colored output when
  # outputting to the terminal. (This is the default setting in Git > 1.8.4.)
  ui = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow
  frag = magenta
  old = red
  new = green

[color "status"]
  added = green
  changed = cyan
  untracked = red

[merge]
  # Include summaries of merged commits in newly created merge commit messages
  log = true

[push]
  default = matching

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[commit]
	gpgsign = true

[alias]
  # git change-commits GIT_COMMITTER_NAME "old name" "new name"
  change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f "
  # from https://help.github.com/articles/remove-sensitive-data
  remove-file = "!f() { git filter-branch -f --index-filter \"git rm --cached --ignore-unmatch $1\" --prune-empty --tag-name-filter cat -- --all; }; f"
[gc]
	auto = 1
[gpg]
	program = gpg2
[credential]
	helper = !git-credential-1password
[pull]
	rebase = false
[fetch]
	prune = true
[gui]
	pruneDuringFetch = true
[init]
	defaultBranch = main
