#!/bin/sh -e
#
#    battery: print the state of the battery
#
#    Copyright (C) 2009 Raphaël Pinson.
#    Copyright (C) 2011-2014 Dustin Kirkland
#
#    Authors: Raphaël Pinson <raphink@ubuntu.com>
#             Dustin Kirkland <kirkland@byobu.co>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

PKG="byobu"

if [ "$1" = "--detail" ]; then
        exit 0
fi

color 2>/dev/null || color() { true; }

# Linux support
for bat in /sys/class/power_supply/* /proc/acpi/battery/*; do
	present=""; full=""; rem=""; state=""
	case "$bat" in
		/sys/*)
			if [ -r "$bat/uevent" ]; then
				. "$bat/uevent"
				case "$POWER_SUPPLY_NAME" in AC|ac|Ac|aC) continue ;; esac
				present="$POWER_SUPPLY_PRESENT"
				# Some use "CHARGE", others use "ENERGY", still others "CAPACITY"
				[ -n "$POWER_SUPPLY_CAPACITY" ] && rem="$POWER_SUPPLY_CAPACITY" && full="100"
				[ -n "$POWER_SUPPLY_CHARGE_FULL" ] && full="$POWER_SUPPLY_CHARGE_FULL"
				[ -n "$POWER_SUPPLY_ENERGY_FULL" ] && full="$POWER_SUPPLY_ENERGY_FULL"
				[ -n "$POWER_SUPPLY_CHARGE_NOW" ] && rem="$POWER_SUPPLY_CHARGE_NOW"
				[ -n "$POWER_SUPPLY_ENERGY_NOW" ] && rem="$POWER_SUPPLY_ENERGY_NOW"
				state="$POWER_SUPPLY_STATUS"
				[ "$present" = "1" ] && [ -n "$full" ] && [ -n "$rem" ] && [ -n "$state" ] && break
			fi
		;;
		/proc/*)
			[ -f "$bat/info" ] || continue
			while read line; do
				set -- ${line}
				case "$line" in
					present:*)
						# make sure that this battery is present
						[ "$2" = "no" ] && continue 2
						present="$2";;
				   	last\ full\ capacity:*) full="$4";;
				esac
				[ -n "$present" -a -n "$full" ] && break
			done < "${bat}/info"
			while read line; do
				set -- ${line}
				case "$line" in
					remaining\ capacity:*) rem="$3";;
					charging\ state:*) state="$3";;
				esac
				[ -n "$rem" -a -n "$state" ] && break
			done < "$bat/state"
			[ -n "$full" ] && [ -n "$rem" ] && [ -n "$state" ] && break
		;;
	esac
done
if [ $rem -ge 0 ] && [ $full -gt 0 ]; then
	percent=$(((100*$rem)/$full))
	if [ "$percent" -lt 33 ]; then
		color="R k"
		bcolor="b R k"
	elif [ "$percent" -lt 67 ]; then
		color="Y k"
		bcolor="b Y k"
	else
		color="G k"
		bcolor="b G k"
	fi
	percent="${percent}${PCT}"
	# Convert state to lower case
	state=$(printf "%s" "$state" | sed 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/')
	case $state in
		charging) sign="+" ;;
		discharging) sign="-" ;;
		charged|unknown|full) sign="=" ;;
		*) sign="$state" ;;
	esac
#	color $bcolor; printf "%s" "$percent"; color -; color $color; printf "%s" "$sign"; color --
	printf "$(color ${bcolor})%s$(color -)$(color $color)%s$(color -) " "$percent" "$sign"

#printf "$(color b c W)%s$(color -)$(color c W)%s$(color -) " "$freq" "GHz"

fi
